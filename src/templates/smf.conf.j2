################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under
# the OAI Public License, Version 1.1  (the "License"); you may not use this file
# except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.openairinterface.org/?page_id=698
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################

SMF =
{
    FQDN          = "{{ fqdn }}";
    INSTANCE      = {{ instance }};         # 0 is the default
    PID_DIRECTORY = "{{ pid_directory }}";  # /var/run is the default

    INTERFACES :
    {
        N4 :
        {
            # SMF binded interface for N4 communication (UPF)
            INTERFACE_NAME = "{{ n4_interface_name }}"; # YOUR NETWORK CONFIG HERE
            IPV4_ADDRESS   = "read";
         };

        SBI :
        {
            # SMF binded interface for SBI interface (e.g., communication with AMF, UDM)
            INTERFACE_NAME = "{{ sbi_interface_name }}";     # YOUR NETWORK CONFIG HERE
            IPV4_ADDRESS   = "read";
            PORT           = {{ sbi_interface_port }};       # YOUR NETWORK CONFIG HERE (default: 80)
            HTTP2_PORT     = {{ sbi_interface_http2_port }}; # YOUR NETWORK CONFIG HERE
            API_VERSION    = "{{ sbi_interface_api_version }}";                # YOUR SMF API VERSION CONFIG HERE
         };

    };

    # DNN configurations with pool of UE assigned IP addresses
    # Do not make IP pools overlap
    # first IPv4 address X.Y.Z.1 is reserved for GTP network device on UPF
    DNN_LIST = (
       # PDU_SESSION_TYPE choice in {IPv4, IPv6, IPv4v6}
       # DNN IP ADDRESS RANGE format is for example: "12.2.1.2 - 12.2.1.128"
      {DNN_NI = "{{ dnn_0_ni }}"; PDU_SESSION_TYPE = "{{ dnn_0_pdu_session_type }}"; IPV4_RANGE = "{{ dnn_0_ipv4_range }}"; IPV6_PREFIX = "{{ dnn_0_ipv6_prefix }}"},
      {DNN_NI = "{{ dnn_1_ni }}"; PDU_SESSION_TYPE = "{{ dnn_1_pdu_session_type }}"; IPV4_RANGE = "{{ dnn_1_ipv4_range }}"; IPV6_PREFIX = "{{ dnn_1_ipv6_prefix }}"},
      {DNN_NI = "{{ dnn_2_ni }}"; PDU_SESSION_TYPE = "{{ dnn_2_pdu_session_type }}"; IPV4_RANGE = "{{ dnn_2_ipv4_range }}"; IPV6_PREFIX = "{{ dnn_2_ipv6_prefix }}"}
    );

    # DNS address communicated to UEs
    DEFAULT_DNS_IPV4_ADDRESS     = "{{ dns_0_ipv4_address }}";      # YOUR DNS CONFIG HERE
    DEFAULT_DNS_SEC_IPV4_ADDRESS = "{{ dns_1_ipv4_address }}";  # YOUR DNS CONFIG HERE
    DEFAULT_DNS_IPV6_ADDRESS     = "{{ dns_0_ipv6_address }}";            # YOUR DNS CONFIG HERE
    DEFAULT_DNS_SEC_IPV6_ADDRESS = "{{ dns_1_ipv6_address }}";            # YOUR DNS CONFIG HERE

    #Default P-CSCF server
    DEFAULT_CSCF_IPV4_ADDRESS = "127.0.0.1";
    DEFAULT_CSCF_IPV6_ADDRESS = "fe80::7915:f408:1787:db8b";

    #Default UE MTU
    UE_MTU = {{ ue_mtu }};

    # SUPPORT FEATURES
    SUPPORT_FEATURES:
    {
      # STRING, {"yes", "no"},
      REGISTER_NRF = "{{ register_nrf }}";  # Set to yes if SMF resgisters to an NRF
      DISCOVER_UPF = "{{ discover_upf }}";  # Set to yes to enable UPF discovery and selection
      FORCE_PUSH_PROTOCOL_CONFIGURATION_OPTIONS = "no"; # Non standard feature, normally should be set to "no",
                                                        # but you may need to set to yes for UE that do not explicitly request a PDN address through NAS signalling
      USE_LOCAL_SUBSCRIPTION_INFO = "{{ use_local_subscription_info }}";  # Set to yes if SMF uses local subscription information instead of from an UDM
      USE_FQDN_DNS = "{{ use_fqdn_dns }}";                  # Set to yes if AMF/UDM/NRF/UPF will relying on a DNS to resolve FQDN
      HTTP_VERSION = {{ http_version }};                    # Default: 1
      USE_NETWORK_INSTANCE    = "{{ use_network_instance }}"   # Set yes if network instance is to be used for given UPF
      ENABLE_USAGE_REPORTING = "{{ enable_usage_reporting }}"   # Set yes if UE USAGE REPORTING is to be done at UPF
    }

    AMF :
    {
      IPV4_ADDRESS = "{{ amf_ipv4_address }}";  # YOUR AMF CONFIG HERE
      PORT         = {{ amf_port }};            # YOUR AMF CONFIG HERE (default: 80)
      API_VERSION  = "{{ amf_api_version }}";   # YOUR AMF API VERSION FOR SBI CONFIG HERE
      FQDN         = "{{ amf_fqdn }}"           # YOUR AMF FQDN CONFIG HERE
    };

    UDM :
    {
      IPV4_ADDRESS = "{{ udm_ipv4_address }}";  # YOUR UDM CONFIG HERE
      PORT         = {{ udm_port }};            # YOUR UDM CONFIG HERE (default: 80)
      API_VERSION  = "{{ udm_api_version }}";   # YOUR UDM API VERSION FOR SBI CONFIG HERE
      FQDN         = "{{ udm_fqdn }}"           # YOUR UDM FQDN CONFIG HERE
    };

    NRF :
    {
      IPV4_ADDRESS = "{{ nrf_ipv4_address }}";  # YOUR NRF CONFIG HERE
      PORT         = {{ nrf_port }};            # YOUR NRF CONFIG HERE (default: 80)
      API_VERSION  = "{{ nrf_api_version }}";   # YOUR NRF API VERSION FOR SBI CONFIG HERE
      FQDN         = "{{ nrf_fqdn }}"           # YOUR NRF FQDN CONFIG HERE
    };

    UPF_LIST = (
         {IPV4_ADDRESS = "{{ upf_0_ipv4_address }}" ; FQDN = "{{ upf_0_fqdn }}"; NWI_LIST = ({DOMAIN_ACCESS  = "{{ domain_access }}", DOMAIN_CORE = "{{ domain_core }}"})}   # YOUR UPF CONFIG HERE
    );                                                               # NWI_LIST IS OPTIONAL PARAMETER

    LOCAL_CONFIGURATION :
    {
      SESSION_MANAGEMENT_SUBSCRIPTION_LIST = (
         { NSSAI_SST = {{ dnn_0_nssai_sst }}, NSSAI_SD = "{{ dnn_0_nssai_sd }}", DNN = "{{ dnn_0_ni }}", DEFAULT_SESSION_TYPE = "{{ dnn_0_pdu_session_type }}", DEFAULT_SSC_MODE = 1,
           QOS_PROFILE_5QI = 6, QOS_PROFILE_PRIORITY_LEVEL = 1, QOS_PROFILE_ARP_PRIORITY_LEVEL = 1, QOS_PROFILE_ARP_PREEMPTCAP = "NOT_PREEMPT",
           QOS_PROFILE_ARP_PREEMPTVULN = "NOT_PREEMPTABLE", SESSION_AMBR_UL = "20Mbps", SESSION_AMBR_DL = "22Mbps"},
         { NSSAI_SST = {{ dnn_1_nssai_sst }}; NSSAI_SD = "{{ dnn_1_nssai_sd }}", DNN = "{{ dnn_1_ni }}", DEFAULT_SESSION_TYPE = "{{ dnn_1_pdu_session_type }}", DEFAULT_SSC_MODE = 1,
           QOS_PROFILE_5QI = 7, QOS_PROFILE_PRIORITY_LEVEL = 1, QOS_PROFILE_ARP_PRIORITY_LEVEL = 1, QOS_PROFILE_ARP_PREEMPTCAP = "NOT_PREEMPT",
           QOS_PROFILE_ARP_PREEMPTVULN = "NOT_PREEMPTABLE", SESSION_AMBR_UL = "20Mbps", SESSION_AMBR_DL = "22Mbps"},
         { NSSAI_SST = {{ dnn_2_nssai_sst }}; NSSAI_SD = "{{ dnn_2_nssai_sd }}", DNN = "{{ dnn_2_ni }}", DEFAULT_SESSION_TYPE = "{{ dnn_2_pdu_session_type }}", DEFAULT_SSC_MODE = 1,
           QOS_PROFILE_5QI = 8, QOS_PROFILE_PRIORITY_LEVEL = 1, QOS_PROFILE_ARP_PRIORITY_LEVEL = 1, QOS_PROFILE_ARP_PREEMPTCAP = "NOT_PREEMPT",
           QOS_PROFILE_ARP_PREEMPTVULN = "NOT_PREEMPTABLE", SESSION_AMBR_UL = "20Mbps", SESSION_AMBR_DL = "22Mbps"}
        );
    };

};
